function particles = kandler_classification(data_table)
% particles = kandler_classification(data_table)
% Particle classification of EDS data using the Kandler algorithm.
%
%Description:
% This function is a programmatically-transcribed version of the sorting
% scheme algorithm from Table S1 in Kandler et al. (2011). The function
% performs particle classification on a table of ATOM PERCENTAGE
% data collected with an EDS detector using a scanning electron
% microscope. It gives general mineralogical information (class, group, and
% refractive index) but does not explicitly classify the particles by mineral 
% species.
%
%Input:
% This function requires an input of class 'table' with columns for each of
% the following elements: Na, Mg, Al, Si, P, S, Cl, K, Ca, Ti, Cr, Mn, and Fe.
% The column names in the table may be full element names or their corresponding
% elemental abbreviations (e.g., "Silicon" and "Si" are both valid).
% Capitalization does not matter. For example, "iron" and "fe" are both
% valid. [Note: the function considers both 'Aluminum' and 'Aluminium' as valid 
% spellings for the element 'Al'].
%
%Output:
% The function output will be a table with 3 categorical variables: class,
% group, and refractive index.
%
%Reference:
% Kandler, K., Lieke, K., Benker, N., Emmel, C., Küpper, M., Müller-Ebert,
%  D., Ebert, M., Scheuvens, D., Schladitz, A., Schütz, L., & Weinbruch, S.
%  (2011). Electron microscopy of particles collected at Praia, Cape Verde,
%  during the Saharan Mineral Dust Experiment: Particle chemistry, shape,
%  mixing state and complex refractive index. Tellus B, 63(4), 475–496.
%  https://doi.org/10.1111/j.1600-0889.2011.00550.x
%
%See also:
% donarummo_classification, panta_classification

%
% BEGIN MAIN FUNCTION
%
% Perform intial function checks
if ~istable(data_table)
	error('Input must be a table.');
end
% Convert full-name table variables to abbreviations
element_names = lower({'Aluminum','Aluminium','Silicon','Iron','Sodium','Magnesium','Phosphorus','Sulfur',...
	'Chlorine','Potassium','Calcium','Titanium','Chromium','Manganese'});
varnames = data_table.Properties.VariableNames;
varnames_lower = lower(varnames);
element_abbreviations = {'Al','Al','Si','Fe','Na','Mg','P','S',...
	'Cl','K','Ca','Ti','Cr','Mn'};
for n = 1:numel(element_abbreviations)
	if any(contains(varnames_lower,element_names{n}))
		inx = contains(varnames_lower,element_names{n});
		varnames(inx) = element_abbreviations(n);
	end
end
data_table.Properties.VariableNames = varnames;
% Make sure all necessary elements are present
element_list = {'Al','Si','Fe','Na','Mg','P','S','Cl','K','Ca','Ti','Cr','Mn'};
vars = data_table.Properties.VariableNames;
if sum(ismember(vars,element_list)) ~= numel(element_list)
	error('Input must be a table containing columns for the elements Na, Mg, Al, Si, P, S, Cl, K, Ca, Ti, Cr, Mn, and Fe');
end
% Evaluate mineralogies with local functions
particles = particle_classification(data_table);
	% particle_classification() is a local function, which calls numerous
	% other local functions that find the index positions for each row that
	% correspond to particular mineral classifications.
particles = array2table(particles,'VariableNames',{'class','group','refractive_index'});
particles.class = categorical(particles.class);
particles.group = categorical(particles.group);
particles.refractive_index = categorical(particles.refractive_index);

%
% LOCAL FUNCTIONS
%
function classifications = particle_classification(T)
	num_classifications = size(T,1); 
	classifications = repmat({'other'},[num_classifications,3]); % Preallocate memory
		% classifications is a [num_classifications 3] cell array where the
		% first column is 'class', the second column is 'group', and the
		% third column is 'refractive index'.
		
		sums = element_sums(T);
		% 01 of 44
			idx = classify01(T,sums,classifications);
			classifications(idx,1) = {'other'};
			classifications(idx,2) = {'biological'};
			classifications(idx,3) = {'N/A'};
		% 02 of 44
			idx = classify02(T,sums,classifications);
			classifications(idx,1) = {'secondary'};
			classifications(idx,2) = {'Na-rich'};
			classifications(idx,3) = {'sulf'};
		% 03 of 44
			idx = classify03(T,sums,classifications);
			classifications(idx,1) = {'secondary'};
			classifications(idx,2) = {'ammonium sulfate'};
			classifications(idx,3) = {'sulf'};
%NOTE: The following blocks of code for classify04 and classify05 are
%commented-out because they require mineral particle data collected on
%particles between 0.03 and 0.20 microns in size. The user may uncomment
%these lines if they are applicable.
%		% 04 of 44
% 			idx = classify04(T,sums,classifications);
% 			classifications(idx,1) = {'soot mixtures'};
% 			classifications(idx,2) = {'soot'};
% 			classifications(idx,3) = {'soot'};
%		% 05 of 44
% 			idx = classify05(T,sums,classifications);
% 			classifications(idx,1) = {'soot mixtures'};
% 			classifications(idx,2) = {'soot+ammonium sulfate'};
% 			classifications(idx,3) = {'sulf+soot'};
		% 06 of 44
			idx = classify06(T,sums,classifications);
			classifications(idx,1) = {'sulfates'};
			classifications(idx,2) = {'Na sulfate'};
			classifications(idx,3) = {'sulf'};
		% 07 of 44
			idx = classify07(T,sums,classifications);
			classifications(idx,1) = {'sulfates'};
			classifications(idx,2) = {'Ca Na sulfate'};
			classifications(idx,3) = {'sulf'};
		% 08 of 44
			idx = classify08(T,sums,classifications);
			classifications(idx,1) = {'sulfates'};
			classifications(idx,2) = {'Ca sulfate'};
			classifications(idx,3) = {'calc'};
		% 09 of 44
			idx = classify09(T,sums,classifications);
			classifications(idx,1) = {'sulfates'};
			classifications(idx,2) = {'other sulfate'};
			classifications(idx,3) = {'sulf'};
		% 10 of 44
			idx = classify10(T,sums,classifications);
			classifications(idx,1) = {'carbonates'};
			classifications(idx,2) = {'Ca carbonate'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 11 of 44
			idx = classify11(T,sums,classifications);
			classifications(idx,1) = {'carbonates'};
			classifications(idx,2) = {'Ca Mg carbonate'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 12 of 44
			idx = classify12(T,sums,classifications);
			classifications(idx,1) = {'phosphates'};
			classifications(idx,2) = {'phosphate'};
			classifications(idx,3) = {'N/A'};
		% 13 of 44
			idx = classify13(T,sums,classifications);
			classifications(idx,1) = {'chlorides'};
			classifications(idx,2) = {'Na chloride'};
			classifications(idx,3) = {'nchl+sulf'};
		% 14 of 44
			idx = classify14(T,sums,classifications);
			classifications(idx,1) = {'chlorides'};
			classifications(idx,2) = {'K chloride'};
			classifications(idx,3) = {'kchl'};
		% 15 of 44
			idx = classify15(T,sums,classifications);
			classifications(idx,1) = {'chlorides'};
			classifications(idx,2) = {'other chloride'};
			classifications(idx,3) = {'N/A'};
		% 16 of 44
			idx = classify16(T,sums,classifications);
			classifications(idx,1) = {'oxides'};
			classifications(idx,2) = {'Fe oxide'};
			classifications(idx,3) = {'hem+sil'};
		% 17 of 44
			idx = classify17(T,sums,classifications);
			classifications(idx,1) = {'oxides'};
			classifications(idx,2) = {'Ti oxide'};
			classifications(idx,3) = {'rut+sil'};
		% 18 of 44
			idx = classify18(T,sums,classifications);
			classifications(idx,1) = {'oxides'};
			classifications(idx,2) = {'Fe Ti oxide'};
			classifications(idx,3) = {'rut+sil'};
		% 19 of 44
			idx = classify19(T,sums,classifications);
			classifications(idx,1) = {'oxides'};
			classifications(idx,2) = {'Al oxide'};
			classifications(idx,3) = {'N/A'};
		% 20 of 44
			idx = classify20(T,sums,classifications);
			classifications(idx,1) = {'quartz'};
			classifications(idx,2) = {'quartz'};
			classifications(idx,3) = {'hem+qtz'};
		% 21 of 44
			idx = classify21(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAl'};
			classifications(idx,3) = {'hem+sil'};
		% 22 of 44
			idx = classify22(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlK'};
			classifications(idx,3) = {'hem+sil'};
		% 23 of 44
			idx = classify23(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlNa'};
			classifications(idx,3) = {'hem+sil'};
		% 24 of 44
			idx = classify24(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlNaCa'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 25 of 44
			idx = classify25(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlNaK'};
			classifications(idx,3) = {'hem+sil'};
		% 26 of 44
			idx = classify26(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlCaFeMg'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 27 of 44
			idx = classify27(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlKFeMg'};
			classifications(idx,3) = {'hem+sil'};
		% 28 of 44
			idx = classify28(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiAlFeMg'};
			classifications(idx,3) = {'hem+sil'};
		% 29 of 44
			idx = classify29(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiMgFe'};
			classifications(idx,3) = {'hem+sil'};
		% 30 of 44
			idx = classify30(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiMg'};
			classifications(idx,3) = {'hem+sil'};
		% 31 of 44
			idx = classify31(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'SiCaTi'};
			classifications(idx,3) = {'rut+sil'};
		% 32 of 44
			idx = classify32(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures Si+S'};
			classifications(idx,3) = {'hem+sil+sulf'};
		% 33 of 44
			idx = classify33(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures AlSi+S'};
			classifications(idx,3) = {'hem+sil+sulf'};
		% 34 of 44
			idx = classify34(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures Cl+S'};
			classifications(idx,3) = {'nchl+sulf'};
		% 35 of 44
			idx = classify35(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures NaCl+Si'};
			classifications(idx,3) = {'hem+sil+nchl+sulf'};
		% 36 of 44
			idx = classify36(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures NaCl+AlSi'};
			classifications(idx,3) = {'hem+sil+nchl+sulf'};
		% 37 of 44
			idx = classify37(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures Ca+Si'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 38 of 44
			idx = classify38(T,sums,classifications);
			classifications(idx,1) = {'mixtures'};
			classifications(idx,2) = {'mixtures Ca+AlSi'};
			classifications(idx,3) = {'hem+sil+calc'};
		% 39 of 44
			idx = classify39(T,sums,classifications);
			classifications(idx,1) = {'silicates'};
			classifications(idx,2) = {'other Si-dominated'};
			classifications(idx,3) = {'hem+sil+sulf'};
		% 40 of 44
			idx = classify40(T,sums,classifications);
			classifications(idx,1) = {'other'};
			classifications(idx,2) = {'steel'};
			classifications(idx,3) = {'hem+sil+sulf'};
		% 41 of 44
			idx = classify41(T,sums,classifications);
			classifications(idx,1) = {'other'};
			classifications(idx,2) = {'other Mg-dominated'};
			classifications(idx,3) = {'N/A'};
		% 42 of 44
			idx = classify42(T,sums,classifications);
			classifications(idx,1) = {'other'};
			classifications(idx,2) = {'other K-dominated'};
			classifications(idx,3) = {'N/A'};
		% 43 of 44
			idx = classify43(T,sums,classifications);
			classifications(idx,1) = {'other'};
			classifications(idx,2) = {'other Ca-dominated'};
			classifications(idx,3) = {'N/A'};
		% 44 of 44
			idx = classify44(classifications);
			classifications(idx,3) = {'N/A'};
end % End of particle_classification() local function
function index = classify01(T,sums,classification_array)
	minisums = T.Na+T.S+T.P+T.Ca;
	criteria1 = (T.K+T.Na+T.S+T.P+T.Ca)./sums;
	criteria2 = T.P ./ sums;
	criteria3 = T.Na ./ sums;
	criteria4 = T.Ca ./ sums;
	criteria5 = T.K ./ sums;
	criteria6 = T.S ./ sums;
	index = ((criteria1 >= 0.4)  & (criteria1 <= 1.1)...
		   & (criteria2 >= 0.05) & (criteria2 <= 0.8)...
		   & (criteria3 >= 0.05) & (criteria3 <= 0.8)...
		   & (criteria4 >= 0.05) & (criteria4 <= 1.1)...
		   & (criteria5 >=0.025) & (criteria5 <= 0.8)...
		   & (criteria6 >=0.025) & (criteria6 <= 0.8)...
		   & ((T.Mg ./ minisums) < 0.1)...
		   & ((T.Al ./ minisums) < 0.05)...
		   & ((T.Si ./ minisums) < 0.1)...
		   & ((T.Cl ./ minisums) < 0.05)...
		   & ((T.Ti ./ minisums) < 0.05)...
		   & ((T.Cr ./ minisums) < 0.05)...
		   & ((T.Mn ./ minisums) < 0.05)...
		   & ((T.Fe ./ minisums) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify02(T,sums,classification_array)
	% NOTE: In the original algorithm from the literature, Kandler et al.
	% (2011) appear to have mistakenly wrote the expression: C/Na<0.05 when
	% they most likely meant Cl/Na<0.05. I have corrected for this error,
	% on the basis that the authors clearly state in the manuscript: "The
	% elements C, N, O, Cu and Ni were not included in the calculation".
	% Moreover, I chose to use Cl because in almost all of the other
	% conditional functions the Cl ratio immediately follows the S ratio,
	% and so Cl is consistent with the rest of the algorithm.
	criteria1 = T.Na ./ sums;
	index = ((criteria1 >= 0.2) & (criteria1 <= 1.1)...
		   & ((T.Cl ./ sums) < 0.002499)...
		   & ((T.Mg ./ T.Na) < 1.1)...
		   & ((T.Al ./ T.Na) < 0.75)...
		   & ((T.Si ./ T.Na) < 0.25)...
		   & ((T.P ./ T.Na) < 0.1)...
		   & ((T.S ./ T.Na) < 0.1)...
		   & ((T.Cl ./ T.Na) < 0.05)...
		   & ((T.K ./ T.Na) < 0.5)...
		   & ((T.Ca ./ T.Na) < 0.5)...
		   & ((T.Ti ./ T.Na) < 0.05)...
		   & ((T.Cr ./ T.Na) < 0.05)...
		   & ((T.Mn ./ T.Na) < 0.1)...
		   & ((T.Fe ./ T.Na) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify03(T,sums,classification_array)
	criteria1 = T.S ./ sums;
	index = ((criteria1 >= 0.3) & (criteria1 <= 1.1)...
		   & ((T.Na ./ T.S) < 0.1)...
		   & ((T.Mg ./ T.S) < 0.1)...
		   & ((T.Al ./ T.S) < 0.2)...
		   & ((T.Si ./ T.S) < 0.25)...
		   & ((T.P  ./ T.S) < 0.1)...
		   & ((T.Cl ./ T.S) < 0.1)...
		   & ((T.K  ./ T.S) < 0.1)...
		   & ((T.Ca ./ T.S) < 0.1)...
		   & ((T.Ti ./ T.S) < 0.05)...
		   & ((T.Cr ./ T.S) < 0.05)...
		   & ((T.Mn ./ T.S) < 0.05)...
		   & ((T.Fe ./ T.S) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify04(T,sums,classification_array)
	%NOTE: This local function is not called by the main function unless
	%the user un-comments the corresponding lines in the main function.
	 index =(((T.Mg ./ sums) < 0.05)...
		   & ((T.K  ./ sums) < 0.3)...
		   & ((T.S  ./ sums) < 0.05)...
		   & ((T.Al ./ sums) < 0.05)...
		   & ((T.Fe ./ sums) < 0.03)...
		   & ((T.Cl ./ sums) < 0.05)...
		   & ((T.Cl ./ T.Si) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify05(T,sums,classification_array)
	%NOTE: This local function is not called by the main function unless
	%the user un-comments the corresponding lines in the main function.
	criteria4 = T.S ./ sums;
	 index =(((T.Mg ./ sums) < 0.05)...
		   & ((T.Si ./ sums) < 1.1)...
		   & ((T.K  ./ sums) < 0.3)...
		   & (criteria4 >= 0.05) & (criteria4 <= 1.1)...
		   & ((T.Al ./ sums) < 0.05)...
		   & ((T.Fe ./ sums) < 0.03)...
		   & ((T.Cl ./ sums) < 0.05)...
		   & ((T.Cl ./ T.Si) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify06(T,sums,classification_array)
	criteria1 = T.Na ./ T.S;
	criteria2 = (T.Na+T.S) ./ sums;
	criteria3 = T.Na ./ sums;
	criteria4 = T.S ./ sums;
	minisums = T.S+T.Na;
	 index =((criteria1 >= 0.101) & (criteria1 <= 10)...
		   & (criteria2 >= 0.1) & (criteria2 <= 1.1)...
		   & (criteria3 >= 0.025) & (criteria3 <= 1.1)...
		   & (criteria4 >= 0.025) & (criteria4 <= 1.1)...
		   & ((T.Mg ./ minisums) < 0.5)...
		   & ((T.Al ./ minisums) < 0.1)...
		   & ((T.Si ./ minisums) < 0.15)...
		   & ((T.P  ./ minisums) < 0.5)...
		   & ((T.Cl ./ minisums) < 0.1)...
		   & ((T.K  ./ minisums) < 0.1)...
		   & ((T.Ca ./ minisums) < 0.05)...
		   & ((T.Ti ./ minisums) < 0.05)...
		   & ((T.Cr ./ minisums) < 0.05)...
		   & ((T.Mn ./ minisums) < 0.5)...
		   & ((T.Fe ./ minisums) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify07(T,sums,classification_array)
	criteria1 = (T.Na+T.S+T.Ca) ./ sums;
	criteria2 = T.Na ./ sums;
	criteria3 = T.S  ./ sums;
	criteria4 = T.Ca ./ sums;
	criteria5 = T.Na ./ T.Ca;
	criteria16 = T.Ca ./ (T.S+T.Na);
	minisums = T.S+T.Na+T.Ca;
	 index =((criteria1 >= 0.15)  & (criteria1 <= 1.1)...
		   & (criteria2 >= 0.025) & (criteria2 <= 1.1)...
		   & (criteria3 >= 0.025) & (criteria3 <= 1.1)...
		   & (criteria4 >= 0.025) & (criteria4 <= 1.1)...
		   & (criteria5 >= 0.100) & (criteria5 <= 10)...
		   & ((T.Mg ./ minisums) < 0.5)...
		   & ((T.Al ./ minisums) < 0.05)...
		   & ((T.Si ./ minisums) < 0.05)...
		   & ((T.P  ./ minisums) < 0.2)...
		   & ((T.Cl ./ minisums) < 0.1)...
		   & ((T.K  ./ minisums) < 0.1)...
		   & ((T.Ti ./ minisums) < 0.05)...
		   & ((T.Cr ./ minisums) < 0.1)...
		   & ((T.Mn ./ minisums) < 0.5)...
		   & ((T.Fe ./ minisums) < 0.1)...
		   & (criteria16 >= 0.1001) & (criteria16 <= 10)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify08(T,sums,classification_array)
	criteria1 = T.Ca ./ T.S;
	criteria2 = (T.Ca+T.S) ./ sums;
	minisums = T.S+T.Ca;
	 index =((criteria1 >= 0.20)  & (criteria1 <= 10)...
		   & (criteria2 >= 0.2) & (criteria2 <= 1.1)...
		   & ((T.Na ./ minisums) < 0.1)...
		   & ((T.Mg ./ minisums) < 0.35)...
		   & ((T.Al ./ minisums) < 0.1)...
		   & ((T.Si ./ minisums) < 0.1)...
		   & ((T.P  ./ minisums) < 0.1)...
		   & ((T.Cl ./ minisums) < 0.1)...
		   & ((T.K  ./ minisums) < 0.1)...
		   & ((T.Ti ./ minisums) < 0.05)...
		   & ((T.Cr ./ minisums) < 0.05)...
		   & ((T.Mn ./ minisums) < 0.5)...
		   & ((T.Fe ./ minisums) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify09(T,sums,classification_array)
	criteria1 = T.S ./ sums;
	index =((criteria1 >= 0.2) & (criteria1 >= 1.1)...
		  & ((T.Na ./ T.S) < 2)...
		  & ((T.Mg ./ T.S) < 2)...
		  & ((T.Al ./ T.S) < 2.5)...
		  & ((T.Si ./ T.S) < 0.25)...
		  & ((T.P  ./ T.S) < 0.2)...
		  & ((T.Cl ./ T.S) < 0.2)...
		  & ((T.K  ./ T.S) < 10)...
		  & ((T.Ca ./ T.S) < 2)...
		  & ((T.Ti ./ T.S) < 0.5)...
		  & ((T.Cr ./ T.S) < 0.5)...
		  & ((T.Mn ./ T.S) < 2)...
		  & ((T.Fe ./ T.S) < 2)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify10(T,sums,classification_array)
	criteria1 = T.Ca ./ sums;
	index = ((criteria1 >= 0.2) & (criteria1 <= 1.1)...
		   & ((T.Na ./ T.Ca) < 0.110)...
		   & ((T.Mg ./ T.Ca) < 0.500)...
		   & ((T.Al ./ T.Ca) < 0.151)...
		   & ((T.Si ./ T.Ca) < 0.110)...
		   & ((T.P  ./ T.Ca) < 0.100)...
		   & ((T.S  ./ T.Ca) < 0.100)...
		   & ((T.Cl ./ T.Ca) < 0.100)...
		   & ((T.K  ./ T.Ca) < 0.100)...
		   & ((T.Ti ./ T.Ca) < 0.100)...
		   & ((T.Cr ./ T.Ca) < 0.050)...
		   & ((T.Mn ./ T.Ca) < 0.500)...
		   & ((T.Fe ./ T.Ca) < 0.100)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify11(T,sums,classification_array)
	criteria1 = (T.Ca+T.Mg) ./ sums;
	criteria2 = T.Mg ./ T.Ca;
	minisums = T.Ca+T.Mg;
	index = ((criteria1 >= 0.200) & (criteria1 <= 1.1)...
		   & (criteria2 >= 0.501) & (criteria2 <= 2.0)...
		   & ((T.Na ./ minisums) < 0.500)...
		   & ((T.Al ./ minisums) < 0.100)...
		   & ((T.Si ./ minisums) < 0.200)...
		   & ((T.P  ./ minisums) < 0.100)...
		   & ((T.S  ./ minisums) < 0.100)...
		   & ((T.Cl ./ minisums) < 0.100)...
		   & ((T.Ti ./ minisums) < 0.100)...
		   & ((T.Cr ./ minisums) < 0.050)...
		   & ((T.Fe ./ minisums) < 0.100)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify12(T,sums,classification_array)
	criteria1 = T.P ./ sums;
	minisums = T.Ca ./ T.P;
	index = ((criteria1 >= 0.050) & (criteria1 <= 1.100)...
			& ((T.Al ./ minisums) < 0.200)...
			& ((T.Si ./ minisums) < 0.100)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify13(T,sums,classification_array)
	minisums = T.Na+T.Cl;
	criteria1 = minisums ./ sums;
	criteria2 = T.Na ./ sums;
	criteria3 = T.Cl ./ sums;
	index = ((criteria1 >= 0.250) & (criteria1 <= 1.100)...
		  &  (criteria2 >= 0.010) & (criteria2 <= 1.100)...
		  &  (criteria3 >= 0.010) & (criteria3 <= 1.100)...
		  & ((T.Si ./ sums) < 0.0499)...
		  & ((T.Al ./ sums) < 0.0299)...
		  & ((T.Mg ./ minisums) < 2.00)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.25)...
		  & ((T.K  ./ minisums) < 0.15)...
		  & ((T.Ti ./ minisums) < 0.25)...
		  & ((T.Cr ./ minisums) < 0.25)...
		  & ((T.Mn ./ minisums) < 2.00)...
		  & ((T.Fe ./ minisums) < 0.25)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify14(T,sums,classification_array)
	minisums = T.K+T.Cl;
	criteria1 = minisums ./ sums;
	criteria2 = T.Na ./ sums;
	criteria3 = T.Cl ./ sums;
	index = ((criteria1 >= 0.300) & (criteria1 <= 1.100)...
		  &  (criteria2 >= 0.010) & (criteria2 <= 1.100)...
		  &  (criteria3 >= 0.010) & (criteria3 <= 1.100)...
		  & ((T.Na ./ minisums) < 0.150)...
		  & ((T.Mg ./ minisums) < 0.100)...
		  & ((T.Al ./ minisums) < 0.200)...
		  & ((T.Si ./ minisums) < 0.250)...
		  & ((T.P  ./ minisums) < 0.200)...
		  & ((T.S  ./ minisums) < 0.250)...
		  & ((T.Ca ./ minisums) < 0.500)...
		  & ((T.Ti ./ minisums) < 0.250)...
		  & ((T.Cr ./ minisums) < 0.250)...
		  & ((T.Mn ./ minisums) < 2.000)...
		  & ((T.Fe ./ minisums) < 0.250)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify15(T,sums,classification_array)
	criteria1 = T.Cl ./ sums;
	index = ((criteria1 >= 0.25) & (criteria1 <= 1.10)...
		  & ((T.Si ./ sums) < 0.0699)...
		  & ((T.Al ./ sums) < 0.0099)...
		  & ((T.Na ./ T.Cl) < 2.0000)...
		  & ((T.Mg ./ T.Cl) < 2.0000)...
		  & ((T.P  ./ T.Cl) < 0.1000)...
		  & ((T.S  ./ T.Cl) < 0.2000)...
		  & ((T.K  ./ T.Cl) < 2.0000)...
		  & ((T.Ca ./ T.Cl) < 2.0000)...
		  & ((T.Ti ./ T.Cl) < 0.1000)...
		  & ((T.Cr ./ T.Cl) < 0.1000)...
		  & ((T.Mn ./ T.Cl) < 2.0000)...
		  & ((T.Fe ./ T.Cl) <10.000)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify16(T,sums,classification_array)
	criteria1 = T.Fe ./ sums;
	index = ((criteria1 >= 0.25) & (criteria1 <= 1.10)...
		  & ((T.Na ./ T.Fe) < 0.10)...
		  & ((T.Mg ./ T.Fe) < 0.25)...
		  & ((T.Al ./ T.Fe) < 0.20)...
		  & ((T.Si ./ T.Fe) < 0.25)...
		  & ((T.P  ./ T.Fe) < 0.20)...
		  & ((T.S  ./ T.Fe) < 0.20)...
		  & ((T.Cl ./ T.Fe) < 0.10)...
		  & ((T.K  ./ T.Fe) < 0.10)...
		  & ((T.Ca ./ T.Fe) < 0.10)...
		  & ((T.Ti ./ T.Fe) < 0.25)...
		  & ((T.Cr ./ T.Fe) < 0.05)...
		  & ((T.Mn ./ T.Fe) < 1.00)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify17(T,sums,classification_array)
	criteria1 = T.Ti ./ sums;
	index = ((criteria1 >= 0.25) & (criteria1 <= 1.10)...
		  & ((T.Na ./ T.Ti) < 0.18)...
		  & ((T.Mg ./ T.Ti) < 0.10)...
		  & ((T.Al ./ T.Ti) < 0.20)...
		  & ((T.Si ./ T.Ti) < 0.25)...
		  & ((T.P  ./ T.Ti) < 0.20)...
		  & ((T.S  ./ T.Ti) < 0.20)...
		  & ((T.Cl ./ T.Ti) < 0.10)...
		  & ((T.K  ./ T.Ti) < 0.10)...
		  & ((T.Ca ./ T.Ti) < 0.10)...
		  & ((T.Cr ./ T.Ti) < 0.05)...
		  & ((T.Mn ./ T.Ti) < 0.25)...
		  & ((T.Fe ./ T.Ti) < 0.25)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify18(T,sums,classification_array)
	minisums = T.Ti+T.Fe;
	criteria1 = T.Ti ./ T.Fe;
	criteria2 = minisums ./ sums;
	index = ((criteria1 >= 0.2501) & (criteria1 <= 4.000)...
		  &  (criteria2 >= 0.2500) & (criteria2 <= 1.100)...
		  & ((T.Na ./ minisums) < 0.20)...
		  & ((T.Mg ./ minisums) < 0.10)...
		  & ((T.Al ./ minisums) < 0.20)...
		  & ((T.Si ./ minisums) < 0.25)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.K  ./ minisums) < 0.10)...
		  & ((T.Ca ./ minisums) < 0.10)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify19(T,sums,classification_array)
	criteria1 = T.Al ./ sums;
	index = ((criteria1 >= 0.2) & (criteria1 <= 1.1)...
		  & ((T.Na ./ T.Al) < 0.2)...
		  & ((T.Mg ./ T.Al) < 0.1)...
		  & ((T.Si ./ T.Al) < 0.2499)...
		  & ((T.P  ./ T.Al) < 0.2)...
		  & ((T.S  ./ T.Al) < 0.2)...
		  & ((T.Cl ./ T.Al) < 0.1)...
		  & ((T.K  ./ T.Al) < 0.1)...
		  & ((T.Ca ./ T.Al) < 0.1)...
		  & ((T.Ti ./ T.Al) < 0.1)...
		  & ((T.Fe ./ T.Al) < 1.0)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify20(T,sums,classification_array)
	criteria1 = T.Si ./ sums;
	index = ((criteria1 >= 0.4) & (criteria1 <= 1.1)...
		  & ((T.Al ./ T.Si) < 0.2)...
		  & ((T.Na ./ T.Si) < 0.1)...
		  & ((T.Mg ./ T.Si) < 0.1)...
		  & ((T.P  ./ T.Si) < 0.2)...
		  & ((T.S  ./ T.Si) < 0.2)...
		  & ((T.Cl ./ T.Si) < 0.05)...
		  & ((T.K  ./ T.Si) < 0.1)...
		  & ((T.Ca ./ T.Si) < 0.05)...
		  & ((T.Ti ./ T.Si) < 0.1)...
		  & ((T.Cr ./ T.Si) < 0.05)...
		  & ((T.Mn ./ T.Si) < 0.25)...
		  & ((T.Fe ./ T.Si) < 0.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify21(T,sums,classification_array)
	minisums = T.Si+T.Al;
	criteria1 = T.Al ./ T.Si;
	criteria2 = minisums ./ sums;
	criteria3 = T.Al ./ sums;
	index = ((criteria1 >= 0.201) & (criteria1 <= 4.000)...
		  &  (criteria2 >= 0.400) & (criteria2 <= 1.100)...
		  &  (criteria3 >= 0.050) & (criteria3 <= 1.100)...
		  & ((T.Na ./ minisums) < 0.05)...
		  & ((T.Mg ./ minisums) < 0.05)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.K  ./ minisums) < 0.05)...
		  & ((T.Ca ./ minisums) < 0.05)...
		  & ((T.Ti ./ minisums) < 0.10)...
		  & ((T.Cr ./ minisums) < 0.10)...
		  & ((T.Mn ./ minisums) < 0.50)...
		  & ((T.Fe ./ minisums) < 0.10)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify22(T,sums,classification_array)
	minisums = T.Si+T.Al+T.K;
	criteria1 = T.K ./ (T.Si+T.Al);
	criteria2 = T.Al ./ T.Si;
	criteria3 = minisums ./ sums;
	criteria4 = T.K ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.00)...
		  &  (criteria2 >= 0.200) & (criteria2 <= 2.00)...
		  &  (criteria3 >= 0.400) & (criteria3 <= 1.10)...
		  &  (criteria4 >= 0.0025)& (criteria4 <= 1.10)...
		  & ((T.Na ./ minisums) < 0.05)...
		  & ((T.Mg ./ minisums) < 0.08)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.10)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.Ca ./ minisums) < 0.10)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify23(T,sums,classification_array)
	minisums = T.Si+T.Al+T.Na;
	criteria1 = T.Na ./ (T.Si+T.Al);
	criteria2 = T.Al ./ T.Si;
	criteria4 = minisums ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.00)...
		  &  (criteria2 >= 0.200) & (criteria2 <= 2.00)...
		  & ((T.Ca ./ T.Na) < 0.25)...
		  &  (criteria4 >= 0.400) & (criteria4 <= 1.10)...
		  & ((T.Mg ./ minisums) < 0.15)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.10)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 0.05)...
		  & ((T.Ca ./ minisums) < 0.05)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.15)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify24(T,sums,classification_array)
	minisum = T.Si+T.Al;
	minisums= T.Si+T.Al+T.Na+T.Ca;
	criteria1 = (T.Ca+T.Na) ./ minisum;
	criteria2 = T.Ca ./ minisum;
	criteria3 = T.Al ./ T.Si;
	criteria4 = T.Ca ./ T.Na;
	criteria5 = minisums ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.00)...
		  &  (criteria2 >= 0.101) & (criteria2 <= 3.00)...
		  &  (criteria3 >= 0.200) & (criteria3 <= 2.00)...
		  &  (criteria4 >= 0.2501)& (criteria4 <= 5.50)...
		  &  (criteria5 >= 0.400) & (criteria5 <= 1.10)...
		  & ((T.Mg ./ minisums) < 0.10)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 0.10)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.10)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify25(T,sums,classification_array)
	minisums = T.Si+T.Al+T.Na+T.K;
	criteria1 = (T.K+T.Na) ./ (T.Si+T.Al);
	criteria2 = T.Al ./ T.Si;
	criteria3 = T.K ./ T.Na;
	criteria4 = minisums ./ sums;
	criteria5 = T.Na ./ sums;
	criteria6 = T.K ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.000)...
		  &  (criteria2 >= 0.200) & (criteria2 <= 2.000)...
		  &  (criteria3 >= 0.250) & (criteria3 <= 4.000)...
		  &  (criteria4 >= 0.400) & (criteria4 <= 1.100)...
		  &  (criteria5 >= 0.050) & (criteria5 <= 1.100)...
		  &  (criteria6 >= 0.050) & (criteria6 <= 1.100)...
		  & ((T.Mg ./ minisums) < 0.05)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.Ca ./ minisums) < 0.10)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify26(T,sums,classification_array)
	minisums = T.Si+T.Al+T.Ca+T.Fe+T.Mg;
	criteria1 = (T.Ca+T.Fe+T.Mg)./(T.Si+T.Al);
	criteria2 = T.Al ./ T.Si;
	criteria3 = T.Ca ./ (T.Fe+T.Mg);
	criteria4 = minisums ./ sums;
	criteria5 = T.Ca ./ sums;
	criteria6 = T.Fe ./ sums;
	criteria7 = T.Mg ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.000)...
		  &  (criteria2 >= 0.200) & (criteria2 <= 2.000)...
		  &  (criteria3 >= 0.250) & (criteria3 <=10.000)...
		  &  (criteria4 >= 0.400) & (criteria4 <= 1.100)...
		  &  (criteria5 >= 0.050) & (criteria5 <= 1.100)...
		  &  (criteria6 >= 0.025) & (criteria6 <= 1.100)...
		  &  (criteria7 >= 0.025) & (criteria7 <= 1.100)...
		  & ((T.Ca ./ (T.Si+T.Al)) < 0.50)...
		  & ((T.Na ./ minisums) < 0.05)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.K  ./ minisums) < 0.05)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))) );
end
function index = classify27(T,sums,classification_array)
	minisum1 = T.Si+T.Al;
	minisum2 = T.Fe+T.Mg;
	minisums = T.Si+T.Al+T.K+T.Fe+T.Mg;
	criteria1 = (T.K+T.Fe+T.Mg) ./ minisum1;
	criteria2 = T.K ./ minisum1;
	criteria3 = minisum2 ./ minisum1;
	criteria4 = T.K ./ minisum2;
	criteria5 = minisums ./ sums;
	index = ((criteria1 >= 0.101) & (criteria1 <= 3.00)...
		  &  (criteria2 >= 0.101) & (criteria2 <= 3.00)...
		  &  (criteria3 >= 0.101) & (criteria3 <= 3.00)...
		  &  (criteria4 >= 0.250) & (criteria4 <= 4.00)...
		  &  (criteria5 >= 0.400) & (criteria5 <= 1.10)...
		  & ((T.Ca ./ sums) < 0.05)...
		  & ((T.Na ./ minisums) < 0.10)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.Ca ./ minisums) < 0.05)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify28(T,sums,classification_array)
	minisum = T.Si+T.Al;
	minisums = T.Si+T.Al+T.Fe+T.Mg;
	criteria1 = T.Al ./ sums;
	criteria2 = T.Fe ./ sums;
	criteria3 = T.Mg ./ sums;
	criteria5 = (T.Mg+T.Fe) ./ minisum;
	criteria6 = T.Al ./ T.Si;
	criteria8 = minisums ./ sums;
	index = ((criteria1 >= 0.10) & (criteria1 <= 0.80)...
		  &  (criteria2 >= 0.05) & (criteria2 <= 0.80)...
		  &  (criteria3 >= 0.05) & (criteria3 <= 0.80)...
		  & ((T.Ca ./ sums) < 0.05)...
		  &  (criteria5 >= 0.101)& (criteria5 <= 3.00)...
		  &  (criteria6 >= 0.201)& (criteria6 <= 2.00)...
		  & ((T.K ./ minisum) < 0.10)...
		  &  (criteria8 >= 0.050)& (criteria8 <= 1.10)...
		  & ((T.Na ./ minisums) < 0.05)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 0.10)...
		  & ((T.Ca ./ minisums) < 0.10)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify29(T,sums,classification_array)
	minisums = T.Si+T.Fe+T.Mg;
	criteria1 = T.Fe ./ (T.Si+T.Mg);
	criteria2 = (T.Mg+T.Fe) ./ T.Si;
	criteria4 = minisums ./ sums;
	index = ((criteria1 >= 0.201) & (criteria1 <= 10)...
		  &  (criteria2 >= 0.250) & (criteria2 <=  4)...
		  & ((T.Al ./ T.Si) < 0.2)...
		  &  (criteria4 >= 0.400) & (criteria4 <=  1.1)...
		  & ((T.Na ./ minisums) < 0.10)...
		  & ((T.Al ./ minisums) < 0.05)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.K  ./ minisums) < 0.10)...
		  & ((T.Ca ./ minisums) < 0.10)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify30(T,sums,classification_array)
	minisums = T.Si+T.Mg;
	criteria1 = T.Mg ./ T.Si;
	criteria3 = minisums ./ sums;
	index = ((criteria1 >= 0.25) & (criteria1 <= 4.0)...
		  & ((T.Al ./ T.Si) < 0.2)...
		  &  (criteria3 >= 0.40) & (criteria3 <= 1.1)...
		  & ((T.Na ./ minisums) < 0.1)...
		  & ((T.Al ./ minisums) < 0.1)...
		  & ((T.P  ./ minisums) < 0.2)...
		  & ((T.S  ./ minisums) < 0.2)...
		  & ((T.Cl ./ minisums) < 0.1)...
		  & ((T.K  ./ minisums) < 0.1)...
		  & ((T.Ca ./ minisums) < 0.1)...
		  & ((T.Ti ./ minisums) < 0.05)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.20)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify31(T,sums,classification_array)
	minisums = T.Si+T.Ca+T.Ti;
	criteria1 = T.Ca ./ T.Ti;
	criteria3 = minisums ./ sums;
	criteria4 = T.Ca ./ T.Si;
	criteria5 = T.Ti ./ T.Si;
	index = ((criteria1 >= 0.25) & (criteria1 <= 4.0)...
		  & ((T.Al ./ T.Si) < 0.2)...
		  &  (criteria3 >= 0.40) & (criteria3 <= 1.1)...
		  &  (criteria4 >= 0.101)& (criteria4 <=10.0)...
		  &  (criteria5 >= 0.101)& (criteria5 <=10.0)...
		  & ((T.Na ./ minisums) < 0.10)...
		  & ((T.Mg ./ minisums) < 0.10)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.S  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.10)...
		  & ((T.K  ./ minisums) < 0.10)...
		  & ((T.Cr ./ minisums) < 0.05)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.20)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify32(T,sums,classification_array)
	minisums = T.Si+T.S;
	criteria2 = T.S ./ sums;
	criteria3 = T.S ./ T.Si;
	criteria5 = minisums ./ sums;
	index = (((T.Al ./ sums) < 0.05)...
		  &  (criteria2 >= 0.05) & (criteria2 <= 0.90)...
		  &  (criteria3 >= 0.50) & (criteria3 <= 3.00)...
		  & ((T.Al ./ T.Si) < 0.20)...
		  &  (criteria5 >= 0.30) & (criteria5 <= 1.10)...
		  & ((T.Na ./ minisums) < 2.00)...
		  & ((T.Mg ./ minisums) < 2.00)...
		  & ((T.Al ./ minisums) < 0.20)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 2.00)...
		  & ((T.Ca ./ minisums) < 2.00)...
		  & ((T.Ti ./ minisums) < 0.20)...
		  & ((T.Cr ./ minisums) < 0.10)...
		  & ((T.Mn ./ minisums) < 0.05)...
		  & ((T.Fe ./ minisums) < 0.20)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify33(T,sums,classification_array)
	minisums = T.Al+T.Si+T.S;
	criteria1 = T.Al ./ sums;
	criteria2 = T.Si ./ sums;
	criteria3 = T.S  ./ sums;
	criteria4 = T.S ./ T.Si;
	criteria5 = T.Al ./ T.Si;
	criteria6 = minisums ./ sums;
	index = ((criteria1 >= 0.05) & (criteria1 <= 0.90)...
		  &  (criteria2 >= 0.10) & (criteria2 <= 0.90)...
		  &  (criteria3 >= 0.10) & (criteria3 <= 0.90)...
		  &  (criteria4 >= 0.50) & (criteria4 <=10.00)...
		  &  (criteria5 >= 0.201)& (criteria5 <= 5.00)...
		  &  (criteria6 >= 0.30) & (criteria6 <= 1.10)...
		  & ((T.Na ./ minisums) < 5.00)...
		  & ((T.Mg ./ minisums) < 5.00)...
		  & ((T.P  ./ minisums) < 0.20)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 5.00)...
		  & ((T.Ca ./ minisums) < 5.00)...
		  & ((T.Ti ./ minisums) < 0.20)...
		  & ((T.Cr ./ minisums) < 0.20)...
		  & ((T.Mn ./ minisums) < 0.20)...
		  & ((T.Fe ./ minisums) < 5.00)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify34(T,sums,classification_array)
	minisums = T.S+T.Cl;
	criteria1 = T.Cl ./ T.S;
	criteria2 = minisums ./ sums;
	criteria3 = T.Cl ./ sums;
	criteria4 = T.S ./ sums;
	criteria5 = T.S ./ (T.Na+T.Cl);
	index = ((criteria1 >= 0.201) & (criteria1 <= 10.00)...
		  &  (criteria2 >= 0.200) & (criteria2 <=  1.10)...
		  &  (criteria3 >= 0.025) & (criteria3 <=  1.10)...
		  &  (criteria4 >= 0.025) & (criteria4 <=  1.10)...
		  &  (criteria5 >= 0.100) & (criteria5 <= 20.00)...
		  & ((T.Na ./ minisums) < 3.00)...
		  & ((T.Mg ./ minisums) < 3.00)...
		  & ((T.Al ./ minisums) < 0.20)...
		  & ((T.Si ./ minisums) < 0.25)...
		  & ((T.P  ./ minisums) < 0.25)...
		  & ((T.K  ./ minisums) < 3.00)...
		  & ((T.Fe ./ minisums) < 2.00)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify35(T,sums,classification_array)
	criteria1 = T.Si ./ (T.Na +T.Cl);
	criteria2 = T.Al ./ T.Si;
	criteria3 = (T.Si+T.Na+T.Cl) ./ sums;
	criteria4 = T.Cl ./ sums;
	criteria5 = T.Na ./ sums;
	criteria6 = T.Si ./ sums;
	index = ((criteria1 >= 0.05)& (criteria1 <= 100)...
		  &  (criteria2 < 0.2)...
		  &  (criteria3 >= 0.2) & (criteria2 <= 1.1)...
		  &  (criteria4 >= 0.05)& (criteria4 <= 1.1)...
		  &  (criteria5 >= 0.05)& (criteria5 <= 1.1)...
		  &  (criteria6 >= 0.01)& (criteria6 <= 1.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify36(T,sums,classification_array)
	criteria1 = (T.Si+T.Al)./(T.Na+T.Cl);
	criteria2 = T.Al ./ T.Si;
	criteria3 = (T.Si+T.Na+T.Cl) ./ sums;
	criteria4 = T.Cl ./ sums;
	criteria5 = T.Na ./ sums;
	criteria6 = T.Si ./ sums;
	criteria7 = T.Al ./ sums;
	index = ((criteria1 >= 0.075) & (criteria1 <= 100)...
		  &  (criteria2 >= 0.201) & (criteria2 <= 100)...
		  &  (criteria3 >= 0.200) & (criteria3 <=   1.1)...
		  &  (criteria4 >= 0.050) & (criteria4 <=   1.1)...
		  &  (criteria5 >= 0.050) & (criteria4 <=   1.1)...
		  &  (criteria6 >= 0.025) & (criteria4 <=   1.1)...
		  &  (criteria7 >= 0.010) & (criteria4 <=   1.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify37(T,sums,classification_array)
	% NOTE: There is an inconsistency in the original Kandler algorithm as
	% written in the literature: for this particular function, Kandler et
	% al. (2011) use the ratio Si/Ca twice, but with different domains. That
	% is, they include an expression for Si/Ca=[0.2501;4] AND
	% Si/Ca=[0.1001;100]. The latter expression is omitted here but note
	% that this may cause the overall algorithm to produce different
	% results than expected.
	minisums = T.Si+T.Ca;
	criteria1 = T.Si ./ T.Ca;
	criteria2 = T.Al ./ T.Si;
	criteria3 = minisums ./ sums;
	criteria4 = T.Si ./ sums;
	criteria5 = T.Ca ./ sums;
	index = ((criteria1 >= 0.2501) & (criteria1 <= 4.00)...
		  &  (criteria2 < 0.2)...
		  &  (criteria3 >= 0.2000) & (criteria3 <= 1.10)...
		  &  (criteria4 >= 0.0100) & (criteria4 <= 1.10)...
		  &  (criteria5 >= 0.0500) & (criteria5 <= 1.10)...
		  & ((T.Mg ./ minisums) < 0.1)...
		  & ((T.Al ./ minisums) < 0.2)...
		  & ((T.P  ./ minisums) < 0.2)...
		  & ((T.S  ./ minisums) < 0.2)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify38(T,sums,classification_array)
	minisums = T.Si+T.Ca;
	criteria1 = T.Al ./ T.Si;
	criteria2 = (T.Ca+T.Si+T.Al)./sums;
	criteria3 = T.Al ./ sums;
	criteria4 = T.Si ./ sums;
	criteria5 = T.Ca ./ sums;
	criteria6 = T.Si ./ T.Ca;
	index = ((criteria1 >= 0.201) & (criteria1 <= 20)...
		  &  (criteria2 >= 0.200) & (criteria2 <=  1.1)...
		  &  (criteria3 >= 0.010) & (criteria3 <=  1.1)...
		  &  (criteria4 >= 0.010) & (criteria3 <=  1.1)...
		  &  (criteria5 >= 0.050) & (criteria3 <=  1.1)...
		  &  (criteria6 >= 0.1001)& (criteria3 <=100)...
		  & ((T.Na ./ minisums) < 0.2)...
		  & ((T.Mg ./ minisums) < 2.0)...
		  & ((T.P  ./ minisums) < 0.2)...
		  & ((T.S  ./ minisums) < 0.2)...
		  & ((T.Cl ./ minisums) < 0.05)...
		  & ((T.K  ./ minisums) < 1.00)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify39(T,sums,classification_array)
	criteria1 = T.Si ./ sums;
	index = ((criteria1 >= 0.1) & (criteria1 <= 1.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify40(T,sums,classification_array)
	criteria1 = T.Fe+T.Ti+T.Mn+T.Cr;
	criteria2 = T.Fe ./ sums;
	index = ((criteria1 >= 0.2) & (criteria1 <= 1.1)...
		   & (criteria2 >= 0.2) & (criteria2 <= 1.1))...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1)));
end
function index = classify41(T,sums,classification_array)
	criteria1 = T.Mg ./ sums;
	index = ((criteria1 >= 0.35) & (criteria1 <= 1.1))...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1)));
end
function index = classify42(T,sums,classification_array)
	criteria1 = T.K ./ sums;
	index = ((criteria1 >= 0.25) & (criteria1 <= 1.1))...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1)));
end
function index = classify43(T,sums,classification_array)
	criteria1 = T.Ca ./ sums;
	index = ((criteria1 >= 0.15) & (criteria1 <= 1.1)...
		  & (cellfun(@(x) strcmp(x, 'other'), classification_array(:,1))));
end
function index = classify44(classifications_array)
	index = cellfun(@(x) strcmp(x, 'other'), classifications_array(:,1));
end
function sums = element_sums(T)
	sums = T.Na + ...
		T.Mg + ...
		T.Al + ...
		T.Si + ...
		T.P + ...
		T.S + ...
		T.Cl + ...
		T.K + ...
		T.Ca + ...
		T.Ti + ...
		T.Cr + ...
		T.Mn + ...
		T.Fe;
end

%
% END MAIN FUNCTION
%
end